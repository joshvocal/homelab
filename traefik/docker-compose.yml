version: "3.5"

services:
  traefik:
    image: traefik:latest
    container_name: traefik
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    networks:
      - reverse-proxy
    ports:
      - 80:80
      - 443:443
    environment:
    - CF_API_EMAIL=${CF_API_EMAIL}
    - CF_DNS_API_TOKEN=${CF_DNS_API_TOKEN}
    - LOCAL_DOMAIN=${LOCAL_DOMAIN}
    - PUBLIC_DOMAIN=${PUBLIC_DOMAIN}
    - TRAEFIK_CERTIFICATESRESOLVERS_LETSENCRYPT_ACME_EMAIL=${ACME_EMAIL}
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik.yml:/traefik.yml:ro
      - ./data/acme.json:/acme.json
    labels:
      - traefik.enable=true

      - traefik.http.routers.traefik.entrypoints=http
      - traefik.http.routers.traefik.rule=Host(`dash.${LOCAL_DOMAIN}`)
      - traefik.http.routers.traefik.service=api@internal

      # Uncomment for https
      # - traefik.http.routers.traefik-secure.entrypoints=https
      # - traefik.http.routers.traefik-secure.rule=Host(`dash.${PUBLIC_DOMAIN}`)
      # - traefik.http.routers.traefik-secure.tls=true
      # - traefik.http.routers.traefik-secure.tls.certresolver=letsencrypt
      # - traefik.http.routers.traefik-secure.tls.domains[0].main=${PUBLIC_DOMAIN}
      # - traefik.http.routers.traefik-secure.tls.domains[0].sans=*.${PUBLIC_DOMAIN}

  whoami:
    image: traefik/whoami
    networks:
      - reverse-proxy
    labels:
      - traefik.enable=true

      - traefik.http.routers.whoami.entrypoints=http
      - traefik.http.routers.whoami.rule=Host(`test.${LOCAL_DOMAIN}`)

      # Uncomment for https
      # - traefik.http.routers.whoami-secure.rule=Host(`test.${PUBLIC_DOMAIN}`)
      # - traefik.http.routers.whoami-secure.entrypoints=https
      # - traefik.http.routers.whoami-secure.tls=true

networks:
  reverse-proxy:
    name: reverse-proxy
    external: true
